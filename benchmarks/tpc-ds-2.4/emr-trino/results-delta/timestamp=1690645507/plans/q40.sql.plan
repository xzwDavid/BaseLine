"- Output[w_state, i_item_id, sales_before, sales_after] => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
        sales_before := sum (7:4)
        sales_after := sum_7 (9:4)
    - TopN[100 by (w_state ASC_NULLS_LAST, i_item_id ASC_NULLS_LAST)] => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
        - LocalExchange[SINGLE] () => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
            - RemoteStreamingExchange[GATHER] => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
                - TopNPartial[100 by (w_state ASC_NULLS_LAST, i_item_id ASC_NULLS_LAST)] => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
                    - Project[projectLocality = LOCAL] => [w_state:varchar, i_item_id:varchar, sum:decimal(38,2), sum_7:decimal(38,2)]
                        - Aggregate(FINAL)[w_state, i_item_id][$hashvalue] => [w_state:varchar, i_item_id:varchar, $hashvalue:bigint, sum:decimal(38,2), sum_7:decimal(38,2)]
                                sum := ""presto.default.sum""((sum_24)) (7:4)
                                sum_7 := ""presto.default.sum""((sum_25)) (9:4)
                            - LocalExchange[HASH][$hashvalue] (w_state, i_item_id) => [w_state:varchar, i_item_id:varchar, sum_25:varbinary, sum_24:varbinary, $hashvalue:bigint]
                                - RemoteStreamingExchange[REPARTITION][$hashvalue_26] => [w_state:varchar, i_item_id:varchar, sum_25:varbinary, sum_24:varbinary, $hashvalue_26:bigint]
                                    - Aggregate(PARTIAL)[w_state, i_item_id][$hashvalue_47] => [w_state:varchar, i_item_id:varchar, $hashvalue_47:bigint, sum_25:varbinary, sum_24:varbinary]
                                            sum_25 := ""presto.default.sum""((expr_6)) (9:4)
                                            sum_24 := ""presto.default.sum""((expr)) (7:4)
                                        - Project[projectLocality = LOCAL] => [w_state:varchar, i_item_id:varchar, expr:decimal(13,2), expr_6:decimal(13,2), $hashvalue_47:bigint]
                                                expr := SWITCH(BOOLEAN'true', WHEN((d_date) < (DATE'2000-03-11'), (cs_sales_price) - (COALESCE(CAST(cr_refunded_cash AS decimal(12,2)), DECIMAL'0.00'))), DECIMAL'0.00') (8:60)
                                                expr_6 := SWITCH(BOOLEAN'true', WHEN((d_date) >= (DATE'2000-03-11'), (cs_sales_price) - (COALESCE(CAST(cr_refunded_cash AS decimal(12,2)), DECIMAL'0.00'))), DECIMAL'0.00') (10:60)
                                                $hashvalue_47 := combine_hash(combine_hash(BIGINT'0', COALESCE($operator$hash_code(w_state), BIGINT'0')), COALESCE($operator$hash_code(i_item_id), BIGINT'0')) (15:5)
                                            - InnerJoin[(""cs_sold_date_sk"" = ""d_date_sk"")][$hashvalue_27, $hashvalue_44] => [cs_sales_price:decimal(7,2), cr_refunded_cash:decimal(7,2), w_state:varchar, i_item_id:varchar, d_date:date]
                                                    Distribution: PARTITIONED
                                                - RemoteStreamingExchange[REPARTITION][$hashvalue_27] => [cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar, i_item_id:varchar, $hashvalue_27:bigint]
                                                    - Project[projectLocality = LOCAL] => [cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar, i_item_id:varchar, $hashvalue_43:bigint]
                                                            $hashvalue_43 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(cs_sold_date_sk), BIGINT'0')) (12:4)
                                                        - InnerJoin[(""cs_item_sk"" = ""i_item_sk"")][$hashvalue_28, $hashvalue_40] => [cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar, i_item_id:varchar]
                                                                Distribution: PARTITIONED
                                                            - RemoteStreamingExchange[REPARTITION][$hashvalue_28] => [cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar, $hashvalue_28:bigint]
                                                                - Project[projectLocality = LOCAL] => [cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar, $hashvalue_39:bigint]
                                                                        $hashvalue_39 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(cs_item_sk), BIGINT'0')) (12:4)
                                                                    - InnerJoin[(""cs_warehouse_sk"" = ""w_warehouse_sk"")][$hashvalue_29, $hashvalue_36] => [cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), w_state:varchar]
                                                                            Distribution: PARTITIONED
                                                                        - RemoteStreamingExchange[REPARTITION][$hashvalue_29] => [cs_warehouse_sk:integer, cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), $hashvalue_29:bigint]
                                                                            - Project[projectLocality = LOCAL] => [cs_warehouse_sk:integer, cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2), $hashvalue_35:bigint]
                                                                                    $hashvalue_35 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(cs_warehouse_sk), BIGINT'0')) (12:4)
                                                                                - LeftJoin[(""cs_order_number"" = ""cr_order_number"") AND (""cs_item_sk"" = ""cr_item_sk"")][$hashvalue_30, $hashvalue_32] => [cs_warehouse_sk:integer, cs_item_sk:integer, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, cr_refunded_cash:decimal(7,2)]
                                                                                        Distribution: PARTITIONED
                                                                                    - RemoteStreamingExchange[REPARTITION][$hashvalue_30] => [cs_warehouse_sk:integer, cs_item_sk:integer, cs_order_number:bigint, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, $hashvalue_30:bigint]
                                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                        - ScanProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_sales}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_sales}, predicate=Optional[ALL]}]'}, projectLocality = LOCAL] => [cs_warehouse_sk:integer, cs_item_sk:integer, cs_order_number:bigint, cs_sales_price:decimal(7,2), cs_sold_date_sk:integer, $hashvalue_31:bigint]
                                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                                $hashvalue_31 := combine_hash(combine_hash(BIGINT'0', COALESCE($operator$hash_code(cs_order_number), BIGINT'0')), COALESCE($operator$hash_code(cs_item_sk), BIGINT'0')) (12:4)
                                                                                                LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_sales}, predicate=Optional[ALL]}
                                                                                                cs_sales_price := DeltaColumnHandle{name=cs_sales_price, dataType=decimal(7,2), columnType=REGULAR} (12:4)
                                                                                                cs_item_sk := DeltaColumnHandle{name=cs_item_sk, dataType=integer, columnType=REGULAR} (12:4)
                                                                                                cs_sold_date_sk := DeltaColumnHandle{name=cs_sold_date_sk, dataType=integer, columnType=PARTITION} (12:4)
                                                                                                cs_order_number := DeltaColumnHandle{name=cs_order_number, dataType=bigint, columnType=REGULAR} (12:4)
                                                                                                cs_warehouse_sk := DeltaColumnHandle{name=cs_warehouse_sk, dataType=integer, columnType=REGULAR} (12:4)
                                                                                    - LocalExchange[HASH][$hashvalue_32] (cr_order_number, cr_item_sk) => [cr_item_sk:integer, cr_order_number:bigint, cr_refunded_cash:decimal(7,2), $hashvalue_32:bigint]
                                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                        - RemoteStreamingExchange[REPARTITION][$hashvalue_33] => [cr_item_sk:integer, cr_order_number:bigint, cr_refunded_cash:decimal(7,2), $hashvalue_33:bigint]
                                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                            - ScanProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_returns}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_returns}, predicate=Optional[ALL]}]'}, projectLocality = LOCAL] => [cr_item_sk:integer, cr_order_number:bigint, cr_refunded_cash:decimal(7,2), $hashvalue_34:bigint]
                                                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                                    $hashvalue_34 := combine_hash(combine_hash(BIGINT'0', COALESCE($operator$hash_code(cr_order_number), BIGINT'0')), COALESCE($operator$hash_code(cr_item_sk), BIGINT'0')) (12:34)
                                                                                                    LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.catalog_returns}, predicate=Optional[ALL]}
                                                                                                    cr_refunded_cash := DeltaColumnHandle{name=cr_refunded_cash, dataType=decimal(7,2), columnType=REGULAR} (12:34)
                                                                                                    cr_order_number := DeltaColumnHandle{name=cr_order_number, dataType=bigint, columnType=REGULAR} (12:34)
                                                                                                    cr_item_sk := DeltaColumnHandle{name=cr_item_sk, dataType=integer, columnType=REGULAR} (12:34)
                                                                        - LocalExchange[HASH][$hashvalue_36] (w_warehouse_sk) => [w_warehouse_sk:integer, w_state:varchar, $hashvalue_36:bigint]
                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                            - RemoteStreamingExchange[REPARTITION][$hashvalue_37] => [w_warehouse_sk:integer, w_state:varchar, $hashvalue_37:bigint]
                                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                - ScanProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.warehouse}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.warehouse}, predicate=Optional[ALL]}]'}, projectLocality = LOCAL] => [w_warehouse_sk:integer, w_state:varchar, $hashvalue_38:bigint]
                                                                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                        $hashvalue_38 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(w_warehouse_sk), BIGINT'0')) (15:4)
                                                                                        LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.warehouse}, predicate=Optional[ALL]}
                                                                                        w_warehouse_sk := DeltaColumnHandle{name=w_warehouse_sk, dataType=integer, columnType=REGULAR} (15:4)
                                                                                        w_state := DeltaColumnHandle{name=w_state, dataType=varchar, columnType=REGULAR} (15:4)
                                                            - LocalExchange[HASH][$hashvalue_40] (i_item_sk) => [i_item_sk:integer, i_item_id:varchar, $hashvalue_40:bigint]
                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                - RemoteStreamingExchange[REPARTITION][$hashvalue_41] => [i_item_sk:integer, i_item_id:varchar, $hashvalue_41:bigint]
                                                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                    - ScanFilterProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.item}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.item}, predicate=Optional[{DeltaColumnHandle{name=i_current_price, dataType=decimal(7,2), columnType=REGULAR}=[ [[""0.99"", ""1.49""]] ]}]}]'}, filterPredicate = i_current_price BETWEEN (DECIMAL'0.99') AND (DECIMAL'1.49'), projectLocality = LOCAL] => [i_item_sk:integer, i_item_id:varchar, $hashvalue_42:bigint]
                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                            $hashvalue_42 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(i_item_sk), BIGINT'0')) (15:15)
                                                                            LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.item}, predicate=Optional[{DeltaColumnHandle{name=i_current_price, dataType=decimal(7,2), columnType=REGULAR}=[ [[""0.99"", ""1.49""]] ]}]}
                                                                            i_current_price := DeltaColumnHandle{name=i_current_price, dataType=decimal(7,2), columnType=REGULAR} (15:15)
                                                                                :: [[""0.99"", ""1.49""]]
                                                                            i_item_sk := DeltaColumnHandle{name=i_item_sk, dataType=integer, columnType=REGULAR} (15:15)
                                                                            i_item_id := DeltaColumnHandle{name=i_item_id, dataType=varchar, columnType=REGULAR} (15:15)
                                                - LocalExchange[HASH][$hashvalue_44] (d_date_sk) => [d_date_sk:integer, d_date:date, $hashvalue_44:bigint]
                                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                    - RemoteStreamingExchange[REPARTITION][$hashvalue_45] => [d_date_sk:integer, d_date:date, $hashvalue_45:bigint]
                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                        - ScanFilterProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}, predicate=Optional[{DeltaColumnHandle{name=d_date, dataType=date, columnType=REGULAR}=[ [[""2000-02-10"", ""2000-04-10""]] ]}]}]'}, filterPredicate = d_date BETWEEN (DATE'2000-02-10') AND (DATE'2000-04-10'), projectLocality = LOCAL] => [d_date_sk:integer, d_date:date, $hashvalue_46:bigint]
                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                $hashvalue_46 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(d_date_sk), BIGINT'0')) (15:21)
                                                                LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}, predicate=Optional[{DeltaColumnHandle{name=d_date, dataType=date, columnType=REGULAR}=[ [[""2000-02-10"", ""2000-04-10""]] ]}]}
                                                                d_date := DeltaColumnHandle{name=d_date, dataType=date, columnType=REGULAR} (15:21)
                                                                    :: [[""2000-02-10"", ""2000-04-10""]]
                                                                d_date_sk := DeltaColumnHandle{name=d_date_sk, dataType=integer, columnType=REGULAR} (15:21)
"
