"- Output[c_last_name, c_first_name, _col2, ss_ticket_number, amt, profit] => [c_last_name:varchar, c_first_name:varchar, substr:varchar, ss_ticket_number:bigint, sum:decimal(38,2), sum_5:decimal(38,2)]
        _col2 := substr (5:28)
        amt := sum (5:65)
        profit := sum_5 (5:69)
    - TopN[100 by (c_last_name ASC_NULLS_LAST, c_first_name ASC_NULLS_LAST, substr ASC_NULLS_LAST, sum_5 ASC_NULLS_LAST)] => [sum:decimal(38,2), sum_5:decimal(38,2), ss_ticket_number:bigint, c_last_name:varchar, c_first_name:varchar, substr:varchar]
        - LocalExchange[SINGLE] () => [sum:decimal(38,2), sum_5:decimal(38,2), ss_ticket_number:bigint, c_last_name:varchar, c_first_name:varchar, substr:varchar]
            - RemoteStreamingExchange[GATHER] => [sum:decimal(38,2), sum_5:decimal(38,2), ss_ticket_number:bigint, c_last_name:varchar, c_first_name:varchar, substr:varchar]
                - TopNPartial[100 by (c_last_name ASC_NULLS_LAST, c_first_name ASC_NULLS_LAST, substr ASC_NULLS_LAST, sum_5 ASC_NULLS_LAST)] => [sum:decimal(38,2), sum_5:decimal(38,2), ss_ticket_number:bigint, c_last_name:varchar, c_first_name:varchar, substr:varchar]
                    - Project[projectLocality = LOCAL] => [sum:decimal(38,2), sum_5:decimal(38,2), ss_ticket_number:bigint, c_last_name:varchar, c_first_name:varchar, substr:varchar]
                            substr := substr(s_city, BIGINT'1', BIGINT'30') (9:13)
                        - InnerJoin[(""ss_customer_sk"" = ""c_customer_sk"")][$hashvalue, $hashvalue_66] => [ss_ticket_number:bigint, s_city:varchar, sum:decimal(38,2), sum_5:decimal(38,2), c_first_name:varchar, c_last_name:varchar]
                                Distribution: PARTITIONED
                            - RemoteStreamingExchange[REPARTITION][$hashvalue] => [ss_ticket_number:bigint, ss_customer_sk:integer, s_city:varchar, sum:decimal(38,2), sum_5:decimal(38,2), $hashvalue:bigint]
                                - Project[projectLocality = LOCAL] => [ss_ticket_number:bigint, ss_customer_sk:integer, s_city:varchar, sum:decimal(38,2), sum_5:decimal(38,2), $hashvalue_65:bigint]
                                        $hashvalue_65 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(ss_customer_sk), BIGINT'0')) (8:12)
                                    - Aggregate(FINAL)[ss_ticket_number, ss_customer_sk, ss_addr_sk, s_city][$hashvalue_47] => [ss_ticket_number:bigint, ss_customer_sk:integer, ss_addr_sk:integer, s_city:varchar, $hashvalue_47:bigint, sum:decimal(38,2), sum_5:decimal(38,2)]
                                            sum := ""presto.default.sum""((sum_45)) (10:12)
                                            sum_5 := ""presto.default.sum""((sum_46)) (11:12)
                                        - LocalExchange[HASH][$hashvalue_47] (ss_ticket_number, ss_customer_sk, ss_addr_sk, s_city) => [ss_ticket_number:bigint, ss_customer_sk:integer, ss_addr_sk:integer, s_city:varchar, sum_45:varbinary, sum_46:varbinary, $hashvalue_47:bigint]
                                            - RemoteStreamingExchange[REPARTITION][$hashvalue_48] => [ss_ticket_number:bigint, ss_customer_sk:integer, ss_addr_sk:integer, s_city:varchar, sum_45:varbinary, sum_46:varbinary, $hashvalue_48:bigint]
                                                - Aggregate(PARTIAL)[ss_ticket_number, ss_customer_sk, ss_addr_sk, s_city][$hashvalue_64] => [ss_ticket_number:bigint, ss_customer_sk:integer, ss_addr_sk:integer, s_city:varchar, $hashvalue_64:bigint, sum_45:varbinary, sum_46:varbinary]
                                                        sum_45 := ""presto.default.sum""((ss_coupon_amt)) (10:12)
                                                        sum_46 := ""presto.default.sum""((ss_net_profit)) (11:12)
                                                    - Project[projectLocality = LOCAL] => [ss_customer_sk:integer, ss_addr_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), s_city:varchar, $hashvalue_64:bigint]
                                                            $hashvalue_64 := combine_hash(combine_hash(combine_hash(combine_hash(BIGINT'0', COALESCE($operator$hash_code(ss_ticket_number), BIGINT'0')), COALESCE($operator$hash_code(ss_customer_sk), BIGINT'0')), COALESCE($operator$hash_code(ss_addr_sk), BIGINT'0')), COALESCE($operator$hash_code(s_city), BIGINT'0')) (21:14)
                                                        - InnerJoin[(""ss_hdemo_sk"" = ""hd_demo_sk"")][$hashvalue_49, $hashvalue_61] => [ss_customer_sk:integer, ss_addr_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), s_city:varchar]
                                                                Distribution: PARTITIONED
                                                            - RemoteStreamingExchange[REPARTITION][$hashvalue_49] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), s_city:varchar, $hashvalue_49:bigint]
                                                                - Project[projectLocality = LOCAL] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), s_city:varchar, $hashvalue_60:bigint]
                                                                        $hashvalue_60 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(ss_hdemo_sk), BIGINT'0')) (12:10)
                                                                    - InnerJoin[(""ss_store_sk"" = ""s_store_sk"")][$hashvalue_50, $hashvalue_57] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), s_city:varchar]
                                                                            Distribution: PARTITIONED
                                                                        - RemoteStreamingExchange[REPARTITION][$hashvalue_50] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_store_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), $hashvalue_50:bigint]
                                                                            - Project[projectLocality = LOCAL] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_store_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), $hashvalue_56:bigint]
                                                                                    $hashvalue_56 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(ss_store_sk), BIGINT'0')) (12:10)
                                                                                - InnerJoin[(""ss_sold_date_sk"" = ""d_date_sk"")][$hashvalue_51, $hashvalue_53] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_store_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2)]
                                                                                        Distribution: PARTITIONED
                                                                                    - RemoteStreamingExchange[REPARTITION][$hashvalue_51] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_store_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), ss_sold_date_sk:integer, $hashvalue_51:bigint]
                                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                        - ScanProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store_sales}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store_sales}, predicate=Optional[ALL]}]'}, projectLocality = LOCAL] => [ss_customer_sk:integer, ss_hdemo_sk:integer, ss_addr_sk:integer, ss_store_sk:integer, ss_ticket_number:bigint, ss_coupon_amt:decimal(7,2), ss_net_profit:decimal(7,2), ss_sold_date_sk:integer, $hashvalue_52:bigint]
                                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                                $hashvalue_52 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(ss_sold_date_sk), BIGINT'0')) (12:10)
                                                                                                LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store_sales}, predicate=Optional[ALL]}
                                                                                                ss_ticket_number := DeltaColumnHandle{name=ss_ticket_number, dataType=bigint, columnType=REGULAR} (12:10)
                                                                                                ss_store_sk := DeltaColumnHandle{name=ss_store_sk, dataType=integer, columnType=REGULAR} (12:10)
                                                                                                ss_customer_sk := DeltaColumnHandle{name=ss_customer_sk, dataType=integer, columnType=REGULAR} (12:10)
                                                                                                ss_sold_date_sk := DeltaColumnHandle{name=ss_sold_date_sk, dataType=integer, columnType=PARTITION} (12:10)
                                                                                                ss_coupon_amt := DeltaColumnHandle{name=ss_coupon_amt, dataType=decimal(7,2), columnType=REGULAR} (12:10)
                                                                                                ss_addr_sk := DeltaColumnHandle{name=ss_addr_sk, dataType=integer, columnType=REGULAR} (12:10)
                                                                                                ss_hdemo_sk := DeltaColumnHandle{name=ss_hdemo_sk, dataType=integer, columnType=REGULAR} (12:10)
                                                                                                ss_net_profit := DeltaColumnHandle{name=ss_net_profit, dataType=decimal(7,2), columnType=REGULAR} (12:10)
                                                                                    - LocalExchange[HASH][$hashvalue_53] (d_date_sk) => [d_date_sk:integer, $hashvalue_53:bigint]
                                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                        - RemoteStreamingExchange[REPARTITION][$hashvalue_54] => [d_date_sk:integer, $hashvalue_54:bigint]
                                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                            - ScanFilterProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}, predicate=Optional[{DeltaColumnHandle{name=d_year, dataType=integer, columnType=REGULAR}=[ [[""1999""], [""2000""], [""2001""]] ], DeltaColumnHandle{name=d_dow, dataType=integer, columnType=REGULAR}=[ [[""1""]] ]}]}]'}, filterPredicate = (IN(d_year, INTEGER'1999', INTEGER'2000', INTEGER'2001')) AND ((d_dow) = (INTEGER'1')), projectLocality = LOCAL] => [d_date_sk:integer, $hashvalue_55:bigint]
                                                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                                    $hashvalue_55 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(d_date_sk), BIGINT'0')) (12:22)
                                                                                                    LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.date_dim}, predicate=Optional[{DeltaColumnHandle{name=d_year, dataType=integer, columnType=REGULAR}=[ [[""1999""], [""2000""], [""2001""]] ], DeltaColumnHandle{name=d_dow, dataType=integer, columnType=REGULAR}=[ [[""1""]] ]}]}
                                                                                                    d_year := DeltaColumnHandle{name=d_year, dataType=integer, columnType=REGULAR} (12:22)
                                                                                                        :: [[""1999""], [""2000""], [""2001""]]
                                                                                                    d_dow := DeltaColumnHandle{name=d_dow, dataType=integer, columnType=REGULAR} (12:22)
                                                                                                        :: [[""1""]]
                                                                                                    d_date_sk := DeltaColumnHandle{name=d_date_sk, dataType=integer, columnType=REGULAR} (12:22)
                                                                        - LocalExchange[HASH][$hashvalue_57] (s_store_sk) => [s_store_sk:integer, s_city:varchar, $hashvalue_57:bigint]
                                                                                Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                            - RemoteStreamingExchange[REPARTITION][$hashvalue_58] => [s_store_sk:integer, s_city:varchar, $hashvalue_58:bigint]
                                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                                - ScanFilterProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store}, predicate=Optional[{DeltaColumnHandle{name=s_number_employees, dataType=integer, columnType=REGULAR}=[ [[""200"", ""295""]] ]}]}]'}, filterPredicate = s_number_employees BETWEEN (INTEGER'200') AND (INTEGER'295'), projectLocality = LOCAL] => [s_store_sk:integer, s_city:varchar, $hashvalue_59:bigint]
                                                                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                                        $hashvalue_59 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(s_store_sk), BIGINT'0')) (12:31)
                                                                                        LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.store}, predicate=Optional[{DeltaColumnHandle{name=s_number_employees, dataType=integer, columnType=REGULAR}=[ [[""200"", ""295""]] ]}]}
                                                                                        s_store_sk := DeltaColumnHandle{name=s_store_sk, dataType=integer, columnType=REGULAR} (12:31)
                                                                                        s_number_employees := DeltaColumnHandle{name=s_number_employees, dataType=integer, columnType=REGULAR} (12:31)
                                                                                            :: [[""200"", ""295""]]
                                                                                        s_city := DeltaColumnHandle{name=s_city, dataType=varchar, columnType=REGULAR} (12:31)
                                                            - LocalExchange[HASH][$hashvalue_61] (hd_demo_sk) => [hd_demo_sk:integer, $hashvalue_61:bigint]
                                                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                - RemoteStreamingExchange[REPARTITION][$hashvalue_62] => [hd_demo_sk:integer, $hashvalue_62:bigint]
                                                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                                                    - ScanFilterProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.household_demographics}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.household_demographics}, predicate=Optional[ALL]}]'}, filterPredicate = ((hd_dep_count) = (INTEGER'6')) OR ((hd_vehicle_count) > (INTEGER'2')), projectLocality = LOCAL] => [hd_demo_sk:integer, $hashvalue_63:bigint]
                                                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                                                            $hashvalue_63 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(hd_demo_sk), BIGINT'0')) (12:37)
                                                                            LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.household_demographics}, predicate=Optional[ALL]}
                                                                            hd_demo_sk := DeltaColumnHandle{name=hd_demo_sk, dataType=integer, columnType=REGULAR} (12:37)
                                                                            hd_vehicle_count := DeltaColumnHandle{name=hd_vehicle_count, dataType=integer, columnType=REGULAR} (12:37)
                                                                            hd_dep_count := DeltaColumnHandle{name=hd_dep_count, dataType=integer, columnType=REGULAR} (12:37)
                            - LocalExchange[HASH][$hashvalue_66] (c_customer_sk) => [c_customer_sk:integer, c_first_name:varchar, c_last_name:varchar, $hashvalue_66:bigint]
                                    Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                - RemoteStreamingExchange[REPARTITION][$hashvalue_67] => [c_customer_sk:integer, c_first_name:varchar, c_last_name:varchar, $hashvalue_67:bigint]
                                        Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}
                                    - ScanProject[table = TableHandle {connectorId='delta', connectorHandle='DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.customer}', layout='Optional[DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.customer}, predicate=Optional[ALL]}]'}, projectLocality = LOCAL] => [c_customer_sk:integer, c_first_name:varchar, c_last_name:varchar, $hashvalue_68:bigint]
                                            Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}
                                            $hashvalue_68 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(c_customer_sk), BIGINT'0')) (21:74)
                                            LAYOUT: DeltaTableLayoutHandle{table=DeltaTableHandle{connectorId=delta, table=tpcds_sf1_delta.customer}, predicate=Optional[ALL]}
                                            c_last_name := DeltaColumnHandle{name=c_last_name, dataType=varchar, columnType=REGULAR} (21:74)
                                            c_first_name := DeltaColumnHandle{name=c_first_name, dataType=varchar, columnType=REGULAR} (21:74)
                                            c_customer_sk := DeltaColumnHandle{name=c_customer_sk, dataType=integer, columnType=REGULAR} (21:74)
"
